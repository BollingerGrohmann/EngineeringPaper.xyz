// Generated from java-escape by ANTLR 4.11.1
// jshint ignore: start
import antlr4 from 'antlr4';


const serializedATN = [4,0,66,661,6,-1,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,
7,3,2,4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,
2,12,7,12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,
19,7,19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,
7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,
33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,39,7,39,2,40,7,40,
2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,45,2,46,7,46,2,47,7,47,2,
48,7,48,2,49,7,49,2,50,7,50,2,51,7,51,2,52,7,52,2,53,7,53,2,54,7,54,2,55,
7,55,2,56,7,56,2,57,7,57,2,58,7,58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,
62,2,63,7,63,2,64,7,64,2,65,7,65,2,66,7,66,2,67,7,67,2,68,7,68,2,69,7,69,
2,70,7,70,1,0,1,0,1,0,1,0,1,1,1,1,1,2,1,2,1,3,1,3,1,4,1,4,1,5,1,5,1,6,1,
6,1,7,1,7,1,8,1,8,1,8,1,8,1,9,1,9,1,9,1,9,1,9,1,10,1,10,1,10,1,10,1,10,1,
10,1,10,1,10,1,11,1,11,1,11,1,11,1,11,1,11,1,12,1,12,1,12,1,12,1,12,1,12,
1,13,1,13,1,13,1,13,1,13,1,13,1,14,1,14,1,14,1,14,1,14,1,15,1,15,1,15,1,
15,1,15,1,15,1,15,1,15,1,16,1,16,1,17,1,17,1,17,1,17,1,18,1,18,1,18,1,18,
1,19,1,19,1,19,1,19,1,20,1,20,1,20,1,20,1,21,1,21,1,21,1,21,1,22,1,22,1,
22,1,22,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,24,1,24,1,24,1,24,1,24,1,24,
1,24,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,26,1,26,1,26,1,26,1,26,1,27,1,
27,1,27,1,27,1,27,1,28,1,28,1,28,1,28,1,28,1,29,1,29,1,29,1,29,1,29,1,30,
1,30,1,30,1,31,1,31,1,31,1,31,1,32,1,32,1,32,1,32,1,32,1,33,1,33,1,33,1,
33,1,33,1,33,1,33,1,33,1,34,1,34,1,34,1,34,1,34,1,34,1,34,1,34,1,34,1,35,
1,35,1,36,1,36,1,37,1,37,1,38,1,38,1,39,1,39,1,40,1,40,1,41,1,41,1,41,1,
41,1,42,1,42,1,42,1,42,1,43,1,43,1,44,4,44,330,8,44,11,44,12,44,331,1,44,
1,44,5,44,336,8,44,10,44,12,44,339,9,44,1,44,3,44,342,8,44,1,44,1,44,4,44,
346,8,44,11,44,12,44,347,1,44,3,44,351,8,44,1,44,4,44,354,8,44,11,44,12,
44,355,1,44,3,44,359,8,44,3,44,361,8,44,1,45,1,45,1,46,1,46,5,46,367,8,46,
10,46,12,46,370,9,46,1,47,1,47,3,47,374,8,47,1,47,4,47,377,8,47,11,47,12,
47,378,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,
1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,
48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,
1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,
48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,
1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,
48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,
1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,
48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,
1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,3,48,519,8,48,1,49,1,49,3,49,
523,8,49,1,49,1,49,1,49,1,49,1,49,4,49,530,8,49,11,49,12,49,531,3,49,534,
8,49,1,49,1,49,3,49,538,8,49,1,50,4,50,541,8,50,11,50,12,50,542,1,50,1,50,
1,51,1,51,1,51,1,51,1,51,1,52,1,52,1,53,1,53,1,53,1,53,1,54,1,54,1,54,1,
54,1,54,1,54,1,55,1,55,1,55,1,55,1,55,1,55,1,56,1,56,1,56,1,56,1,56,1,56,
1,57,1,57,1,58,1,58,5,58,580,8,58,10,58,12,58,583,9,58,1,59,1,59,1,60,1,
60,1,61,1,61,1,62,1,62,1,63,1,63,1,64,3,64,596,8,64,1,64,4,64,599,8,64,11,
64,12,64,600,1,64,1,64,5,64,605,8,64,10,64,12,64,608,9,64,1,64,3,64,611,
8,64,1,64,1,64,4,64,615,8,64,11,64,12,64,616,1,64,3,64,620,8,64,1,64,4,64,
623,8,64,11,64,12,64,624,3,64,627,8,64,1,65,1,65,1,66,1,66,1,66,1,66,1,66,
1,66,1,66,1,66,1,67,1,67,1,67,1,67,1,67,1,67,1,67,1,67,1,67,1,68,4,68,649,
8,68,11,68,12,68,650,1,68,1,68,1,69,1,69,1,69,1,69,1,69,1,70,1,70,0,0,71,
2,1,4,2,6,3,8,4,10,5,12,6,14,7,16,8,18,9,20,10,22,11,24,12,26,13,28,14,30,
15,32,16,34,17,36,18,38,19,40,20,42,21,44,22,46,23,48,24,50,25,52,26,54,
27,56,28,58,29,60,30,62,31,64,32,66,33,68,34,70,35,72,36,74,37,76,38,78,
39,80,40,82,41,84,42,86,43,88,44,90,45,92,0,94,0,96,0,98,0,100,46,102,47,
104,48,106,49,108,50,110,51,112,52,114,53,116,54,118,55,120,56,122,57,124,
58,126,59,128,60,130,61,132,0,134,62,136,63,138,64,140,65,142,66,2,0,1,6,
1,0,48,57,2,0,65,90,97,122,3,0,48,57,65,90,97,122,2,0,69,69,101,101,2,0,
43,43,45,45,3,0,9,10,13,13,32,32,713,0,2,1,0,0,0,0,4,1,0,0,0,0,6,1,0,0,0,
0,8,1,0,0,0,0,10,1,0,0,0,0,12,1,0,0,0,0,14,1,0,0,0,0,16,1,0,0,0,0,18,1,0,
0,0,0,20,1,0,0,0,0,22,1,0,0,0,0,24,1,0,0,0,0,26,1,0,0,0,0,28,1,0,0,0,0,30,
1,0,0,0,0,32,1,0,0,0,0,34,1,0,0,0,0,36,1,0,0,0,0,38,1,0,0,0,0,40,1,0,0,0,
0,42,1,0,0,0,0,44,1,0,0,0,0,46,1,0,0,0,0,48,1,0,0,0,0,50,1,0,0,0,0,52,1,
0,0,0,0,54,1,0,0,0,0,56,1,0,0,0,0,58,1,0,0,0,0,60,1,0,0,0,0,62,1,0,0,0,0,
64,1,0,0,0,0,66,1,0,0,0,0,68,1,0,0,0,0,70,1,0,0,0,0,72,1,0,0,0,0,74,1,0,
0,0,0,76,1,0,0,0,0,78,1,0,0,0,0,80,1,0,0,0,0,82,1,0,0,0,0,84,1,0,0,0,0,86,
1,0,0,0,0,88,1,0,0,0,0,90,1,0,0,0,0,100,1,0,0,0,0,102,1,0,0,0,0,104,1,0,
0,0,0,106,1,0,0,0,1,108,1,0,0,0,1,110,1,0,0,0,1,112,1,0,0,0,1,114,1,0,0,
0,1,116,1,0,0,0,1,118,1,0,0,0,1,120,1,0,0,0,1,122,1,0,0,0,1,124,1,0,0,0,
1,126,1,0,0,0,1,128,1,0,0,0,1,130,1,0,0,0,1,134,1,0,0,0,1,136,1,0,0,0,1,
138,1,0,0,0,1,140,1,0,0,0,1,142,1,0,0,0,2,144,1,0,0,0,4,148,1,0,0,0,6,150,
1,0,0,0,8,152,1,0,0,0,10,154,1,0,0,0,12,156,1,0,0,0,14,158,1,0,0,0,16,160,
1,0,0,0,18,162,1,0,0,0,20,166,1,0,0,0,22,171,1,0,0,0,24,179,1,0,0,0,26,185,
1,0,0,0,28,191,1,0,0,0,30,197,1,0,0,0,32,202,1,0,0,0,34,210,1,0,0,0,36,212,
1,0,0,0,38,216,1,0,0,0,40,220,1,0,0,0,42,224,1,0,0,0,44,228,1,0,0,0,46,232,
1,0,0,0,48,236,1,0,0,0,50,243,1,0,0,0,52,250,1,0,0,0,54,257,1,0,0,0,56,262,
1,0,0,0,58,267,1,0,0,0,60,272,1,0,0,0,62,277,1,0,0,0,64,280,1,0,0,0,66,284,
1,0,0,0,68,289,1,0,0,0,70,297,1,0,0,0,72,306,1,0,0,0,74,308,1,0,0,0,76,310,
1,0,0,0,78,312,1,0,0,0,80,314,1,0,0,0,82,316,1,0,0,0,84,318,1,0,0,0,86,322,
1,0,0,0,88,326,1,0,0,0,90,360,1,0,0,0,92,362,1,0,0,0,94,364,1,0,0,0,96,371,
1,0,0,0,98,380,1,0,0,0,100,522,1,0,0,0,102,540,1,0,0,0,104,546,1,0,0,0,106,
551,1,0,0,0,108,553,1,0,0,0,110,557,1,0,0,0,112,563,1,0,0,0,114,569,1,0,
0,0,116,575,1,0,0,0,118,577,1,0,0,0,120,584,1,0,0,0,122,586,1,0,0,0,124,
588,1,0,0,0,126,590,1,0,0,0,128,592,1,0,0,0,130,626,1,0,0,0,132,628,1,0,
0,0,134,630,1,0,0,0,136,638,1,0,0,0,138,648,1,0,0,0,140,654,1,0,0,0,142,
659,1,0,0,0,144,145,5,91,0,0,145,146,1,0,0,0,146,147,6,0,0,0,147,3,1,0,0,
0,148,149,5,59,0,0,149,5,1,0,0,0,150,151,5,123,0,0,151,7,1,0,0,0,152,153,
5,125,0,0,153,9,1,0,0,0,154,155,5,40,0,0,155,11,1,0,0,0,156,157,5,41,0,0,
157,13,1,0,0,0,158,159,5,124,0,0,159,15,1,0,0,0,160,161,5,95,0,0,161,17,
1,0,0,0,162,163,5,92,0,0,163,164,5,112,0,0,164,165,5,105,0,0,165,19,1,0,
0,0,166,167,5,92,0,0,167,168,5,105,0,0,168,169,5,110,0,0,169,170,5,116,0,
0,170,21,1,0,0,0,171,172,5,92,0,0,172,173,5,109,0,0,173,174,5,97,0,0,174,
175,5,116,0,0,175,176,5,104,0,0,176,177,5,114,0,0,177,178,5,109,0,0,178,
23,1,0,0,0,179,180,5,92,0,0,180,181,5,102,0,0,181,182,5,114,0,0,182,183,
5,97,0,0,183,184,5,99,0,0,184,25,1,0,0,0,185,186,5,92,0,0,186,187,5,99,0,
0,187,188,5,100,0,0,188,189,5,111,0,0,189,190,5,116,0,0,190,27,1,0,0,0,191,
192,5,92,0,0,192,193,5,115,0,0,193,194,5,113,0,0,194,195,5,114,0,0,195,196,
5,116,0,0,196,29,1,0,0,0,197,198,5,92,0,0,198,199,5,115,0,0,199,200,5,105,
0,0,200,201,5,109,0,0,201,31,1,0,0,0,202,203,5,92,0,0,203,204,5,97,0,0,204,
205,5,112,0,0,205,206,5,112,0,0,206,207,5,114,0,0,207,208,5,111,0,0,208,
209,5,120,0,0,209,33,1,0,0,0,210,211,5,92,0,0,211,35,1,0,0,0,212,213,5,115,
0,0,213,214,5,105,0,0,214,215,5,110,0,0,215,37,1,0,0,0,216,217,5,99,0,0,
217,218,5,111,0,0,218,219,5,115,0,0,219,39,1,0,0,0,220,221,5,116,0,0,221,
222,5,97,0,0,222,223,5,110,0,0,223,41,1,0,0,0,224,225,5,99,0,0,225,226,5,
111,0,0,226,227,5,116,0,0,227,43,1,0,0,0,228,229,5,115,0,0,229,230,5,101,
0,0,230,231,5,99,0,0,231,45,1,0,0,0,232,233,5,99,0,0,233,234,5,115,0,0,234,
235,5,99,0,0,235,47,1,0,0,0,236,237,5,97,0,0,237,238,5,114,0,0,238,239,5,
99,0,0,239,240,5,115,0,0,240,241,5,105,0,0,241,242,5,110,0,0,242,49,1,0,
0,0,243,244,5,97,0,0,244,245,5,114,0,0,245,246,5,99,0,0,246,247,5,99,0,0,
247,248,5,111,0,0,248,249,5,115,0,0,249,51,1,0,0,0,250,251,5,97,0,0,251,
252,5,114,0,0,252,253,5,99,0,0,253,254,5,116,0,0,254,255,5,97,0,0,255,256,
5,110,0,0,256,53,1,0,0,0,257,258,5,115,0,0,258,259,5,105,0,0,259,260,5,110,
0,0,260,261,5,104,0,0,261,55,1,0,0,0,262,263,5,99,0,0,263,264,5,111,0,0,
264,265,5,115,0,0,265,266,5,104,0,0,266,57,1,0,0,0,267,268,5,116,0,0,268,
269,5,97,0,0,269,270,5,110,0,0,270,271,5,104,0,0,271,59,1,0,0,0,272,273,
5,99,0,0,273,274,5,111,0,0,274,275,5,116,0,0,275,276,5,104,0,0,276,61,1,
0,0,0,277,278,5,108,0,0,278,279,5,110,0,0,279,63,1,0,0,0,280,281,5,108,0,
0,281,282,5,111,0,0,282,283,5,103,0,0,283,65,1,0,0,0,284,285,5,92,0,0,285,
286,5,108,0,0,286,287,5,111,0,0,287,288,5,103,0,0,288,67,1,0,0,0,289,290,
5,92,0,0,290,291,5,108,0,0,291,292,5,101,0,0,292,293,5,102,0,0,293,294,5,
116,0,0,294,295,1,0,0,0,295,296,6,33,1,0,296,69,1,0,0,0,297,298,5,92,0,0,
298,299,5,114,0,0,299,300,5,105,0,0,300,301,5,103,0,0,301,302,5,104,0,0,
302,303,5,116,0,0,303,304,1,0,0,0,304,305,6,34,1,0,305,71,1,0,0,0,306,307,
5,43,0,0,307,73,1,0,0,0,308,309,5,45,0,0,309,75,1,0,0,0,310,311,5,94,0,0,
311,77,1,0,0,0,312,313,5,61,0,0,313,79,1,0,0,0,314,315,5,60,0,0,315,81,1,
0,0,0,316,317,5,62,0,0,317,83,1,0,0,0,318,319,5,92,0,0,319,320,5,108,0,0,
320,321,5,101,0,0,321,85,1,0,0,0,322,323,5,92,0,0,323,324,5,103,0,0,324,
325,5,101,0,0,325,87,1,0,0,0,326,327,5,44,0,0,327,89,1,0,0,0,328,330,3,92,
45,0,329,328,1,0,0,0,330,331,1,0,0,0,331,329,1,0,0,0,331,332,1,0,0,0,332,
333,1,0,0,0,333,337,5,46,0,0,334,336,3,92,45,0,335,334,1,0,0,0,336,339,1,
0,0,0,337,335,1,0,0,0,337,338,1,0,0,0,338,341,1,0,0,0,339,337,1,0,0,0,340,
342,3,96,47,0,341,340,1,0,0,0,341,342,1,0,0,0,342,361,1,0,0,0,343,345,5,
46,0,0,344,346,3,92,45,0,345,344,1,0,0,0,346,347,1,0,0,0,347,345,1,0,0,0,
347,348,1,0,0,0,348,350,1,0,0,0,349,351,3,96,47,0,350,349,1,0,0,0,350,351,
1,0,0,0,351,361,1,0,0,0,352,354,3,92,45,0,353,352,1,0,0,0,354,355,1,0,0,
0,355,353,1,0,0,0,355,356,1,0,0,0,356,358,1,0,0,0,357,359,3,96,47,0,358,
357,1,0,0,0,358,359,1,0,0,0,359,361,1,0,0,0,360,329,1,0,0,0,360,343,1,0,
0,0,360,353,1,0,0,0,361,91,1,0,0,0,362,363,7,0,0,0,363,93,1,0,0,0,364,368,
7,1,0,0,365,367,7,2,0,0,366,365,1,0,0,0,367,370,1,0,0,0,368,366,1,0,0,0,
368,369,1,0,0,0,369,95,1,0,0,0,370,368,1,0,0,0,371,373,7,3,0,0,372,374,7,
4,0,0,373,372,1,0,0,0,373,374,1,0,0,0,374,376,1,0,0,0,375,377,3,92,45,0,
376,375,1,0,0,0,377,378,1,0,0,0,378,376,1,0,0,0,378,379,1,0,0,0,379,97,1,
0,0,0,380,518,5,92,0,0,381,382,5,97,0,0,382,383,5,108,0,0,383,384,5,112,
0,0,384,385,5,104,0,0,385,519,5,97,0,0,386,387,5,98,0,0,387,388,5,101,0,
0,388,389,5,116,0,0,389,519,5,97,0,0,390,391,5,103,0,0,391,392,5,97,0,0,
392,393,5,109,0,0,393,394,5,109,0,0,394,519,5,97,0,0,395,396,5,100,0,0,396,
397,5,101,0,0,397,398,5,108,0,0,398,399,5,116,0,0,399,519,5,97,0,0,400,401,
5,101,0,0,401,402,5,112,0,0,402,403,5,115,0,0,403,404,5,105,0,0,404,405,
5,108,0,0,405,406,5,111,0,0,406,519,5,110,0,0,407,408,5,122,0,0,408,409,
5,101,0,0,409,410,5,116,0,0,410,519,5,97,0,0,411,412,5,101,0,0,412,413,5,
116,0,0,413,519,5,97,0,0,414,415,5,116,0,0,415,416,5,104,0,0,416,417,5,101,
0,0,417,418,5,116,0,0,418,519,5,97,0,0,419,420,5,105,0,0,420,421,5,111,0,
0,421,422,5,116,0,0,422,519,5,97,0,0,423,424,5,107,0,0,424,425,5,97,0,0,
425,426,5,112,0,0,426,427,5,112,0,0,427,519,5,97,0,0,428,429,5,108,0,0,429,
430,5,97,0,0,430,431,5,109,0,0,431,432,5,98,0,0,432,433,5,100,0,0,433,519,
5,97,0,0,434,435,5,109,0,0,435,519,5,117,0,0,436,437,5,120,0,0,437,519,5,
105,0,0,438,439,5,114,0,0,439,440,5,104,0,0,440,519,5,111,0,0,441,442,5,
115,0,0,442,443,5,105,0,0,443,444,5,103,0,0,444,445,5,109,0,0,445,519,5,
97,0,0,446,447,5,116,0,0,447,448,5,97,0,0,448,519,5,117,0,0,449,450,5,117,
0,0,450,451,5,112,0,0,451,452,5,115,0,0,452,453,5,105,0,0,453,454,5,108,
0,0,454,455,5,111,0,0,455,519,5,110,0,0,456,457,5,112,0,0,457,458,5,104,
0,0,458,519,5,105,0,0,459,460,5,99,0,0,460,461,5,104,0,0,461,519,5,105,0,
0,462,463,5,112,0,0,463,464,5,115,0,0,464,519,5,105,0,0,465,466,5,111,0,
0,466,467,5,109,0,0,467,468,5,101,0,0,468,469,5,103,0,0,469,519,5,97,0,0,
470,471,5,71,0,0,471,472,5,97,0,0,472,473,5,109,0,0,473,474,5,109,0,0,474,
519,5,97,0,0,475,476,5,68,0,0,476,477,5,101,0,0,477,478,5,108,0,0,478,479,
5,116,0,0,479,519,5,97,0,0,480,481,5,84,0,0,481,482,5,104,0,0,482,483,5,
101,0,0,483,484,5,116,0,0,484,519,5,97,0,0,485,486,5,76,0,0,486,487,5,97,
0,0,487,488,5,109,0,0,488,489,5,98,0,0,489,490,5,100,0,0,490,519,5,97,0,
0,491,492,5,88,0,0,492,519,5,105,0,0,493,494,5,80,0,0,494,519,5,105,0,0,
495,496,5,83,0,0,496,497,5,105,0,0,497,498,5,103,0,0,498,499,5,109,0,0,499,
519,5,97,0,0,500,501,5,85,0,0,501,502,5,112,0,0,502,503,5,115,0,0,503,504,
5,105,0,0,504,505,5,108,0,0,505,506,5,111,0,0,506,519,5,110,0,0,507,508,
5,80,0,0,508,509,5,104,0,0,509,519,5,105,0,0,510,511,5,80,0,0,511,512,5,
115,0,0,512,519,5,105,0,0,513,514,5,79,0,0,514,515,5,109,0,0,515,516,5,101,
0,0,516,517,5,103,0,0,517,519,5,97,0,0,518,381,1,0,0,0,518,386,1,0,0,0,518,
390,1,0,0,0,518,395,1,0,0,0,518,400,1,0,0,0,518,407,1,0,0,0,518,411,1,0,
0,0,518,414,1,0,0,0,518,419,1,0,0,0,518,423,1,0,0,0,518,428,1,0,0,0,518,
434,1,0,0,0,518,436,1,0,0,0,518,438,1,0,0,0,518,441,1,0,0,0,518,446,1,0,
0,0,518,449,1,0,0,0,518,456,1,0,0,0,518,459,1,0,0,0,518,462,1,0,0,0,518,
465,1,0,0,0,518,470,1,0,0,0,518,475,1,0,0,0,518,480,1,0,0,0,518,485,1,0,
0,0,518,491,1,0,0,0,518,493,1,0,0,0,518,495,1,0,0,0,518,500,1,0,0,0,518,
507,1,0,0,0,518,510,1,0,0,0,518,513,1,0,0,0,519,99,1,0,0,0,520,523,3,94,
46,0,521,523,3,98,48,0,522,520,1,0,0,0,522,521,1,0,0,0,523,537,1,0,0,0,524,
525,5,95,0,0,525,526,5,123,0,0,526,533,1,0,0,0,527,534,3,94,46,0,528,530,
3,92,45,0,529,528,1,0,0,0,530,531,1,0,0,0,531,529,1,0,0,0,531,532,1,0,0,
0,532,534,1,0,0,0,533,527,1,0,0,0,533,529,1,0,0,0,534,535,1,0,0,0,535,536,
5,125,0,0,536,538,1,0,0,0,537,524,1,0,0,0,537,538,1,0,0,0,538,101,1,0,0,
0,539,541,7,5,0,0,540,539,1,0,0,0,541,542,1,0,0,0,542,540,1,0,0,0,542,543,
1,0,0,0,543,544,1,0,0,0,544,545,6,50,1,0,545,103,1,0,0,0,546,547,5,92,0,
0,547,548,5,32,0,0,548,549,1,0,0,0,549,550,6,51,1,0,550,105,1,0,0,0,551,
552,9,0,0,0,552,107,1,0,0,0,553,554,5,93,0,0,554,555,1,0,0,0,555,556,6,53,
2,0,556,109,1,0,0,0,557,558,5,92,0,0,558,559,5,102,0,0,559,560,5,114,0,0,
560,561,5,97,0,0,561,562,5,99,0,0,562,111,1,0,0,0,563,564,5,92,0,0,564,565,
5,99,0,0,565,566,5,100,0,0,566,567,5,111,0,0,567,568,5,116,0,0,568,113,1,
0,0,0,569,570,5,92,0,0,570,571,5,115,0,0,571,572,5,113,0,0,572,573,5,114,
0,0,573,574,5,116,0,0,574,115,1,0,0,0,575,576,5,94,0,0,576,117,1,0,0,0,577,
581,7,1,0,0,578,580,7,2,0,0,579,578,1,0,0,0,580,583,1,0,0,0,581,579,1,0,
0,0,581,582,1,0,0,0,582,119,1,0,0,0,583,581,1,0,0,0,584,585,5,40,0,0,585,
121,1,0,0,0,586,587,5,41,0,0,587,123,1,0,0,0,588,589,5,123,0,0,589,125,1,
0,0,0,590,591,5,125,0,0,591,127,1,0,0,0,592,593,5,49,0,0,593,129,1,0,0,0,
594,596,5,45,0,0,595,594,1,0,0,0,595,596,1,0,0,0,596,598,1,0,0,0,597,599,
3,132,65,0,598,597,1,0,0,0,599,600,1,0,0,0,600,598,1,0,0,0,600,601,1,0,0,
0,601,602,1,0,0,0,602,606,5,46,0,0,603,605,3,132,65,0,604,603,1,0,0,0,605,
608,1,0,0,0,606,604,1,0,0,0,606,607,1,0,0,0,607,627,1,0,0,0,608,606,1,0,
0,0,609,611,5,45,0,0,610,609,1,0,0,0,610,611,1,0,0,0,611,612,1,0,0,0,612,
614,5,46,0,0,613,615,3,132,65,0,614,613,1,0,0,0,615,616,1,0,0,0,616,614,
1,0,0,0,616,617,1,0,0,0,617,627,1,0,0,0,618,620,5,45,0,0,619,618,1,0,0,0,
619,620,1,0,0,0,620,622,1,0,0,0,621,623,3,132,65,0,622,621,1,0,0,0,623,624,
1,0,0,0,624,622,1,0,0,0,624,625,1,0,0,0,625,627,1,0,0,0,626,595,1,0,0,0,
626,610,1,0,0,0,626,619,1,0,0,0,627,131,1,0,0,0,628,629,7,0,0,0,629,133,
1,0,0,0,630,631,5,92,0,0,631,632,5,108,0,0,632,633,5,101,0,0,633,634,5,102,
0,0,634,635,5,116,0,0,635,636,1,0,0,0,636,637,6,66,1,0,637,135,1,0,0,0,638,
639,5,92,0,0,639,640,5,114,0,0,640,641,5,105,0,0,641,642,5,103,0,0,642,643,
5,104,0,0,643,644,5,116,0,0,644,645,1,0,0,0,645,646,6,67,1,0,646,137,1,0,
0,0,647,649,7,5,0,0,648,647,1,0,0,0,649,650,1,0,0,0,650,648,1,0,0,0,650,
651,1,0,0,0,651,652,1,0,0,0,652,653,6,68,1,0,653,139,1,0,0,0,654,655,5,92,
0,0,655,656,5,32,0,0,656,657,1,0,0,0,657,658,6,69,1,0,658,141,1,0,0,0,659,
660,9,0,0,0,660,143,1,0,0,0,29,0,1,331,337,341,347,350,355,358,360,368,373,
378,518,522,531,533,537,542,581,595,600,606,610,616,619,624,626,650,3,2,
1,0,6,0,0,2,0,0];


const atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

const decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4.dfa.DFA(ds, index) );

export default class LatexLexer extends antlr4.Lexer {

    static grammarFileName = "LatexLexer.g4";
    static channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	static modeNames = [ "DEFAULT_MODE", "UNITS" ];
	static literalNames = [ null, "'['", "';'", null, null, null, null, "'|'", 
                         "'_'", "'\\pi'", "'\\int'", "'\\mathrm'", null, 
                         null, null, "'\\sim'", "'\\approx'", "'\\'", "'sin'", 
                         "'cos'", "'tan'", "'cot'", "'sec'", "'csc'", "'arcsin'", 
                         "'arccos'", "'arctan'", "'sinh'", "'cosh'", "'tanh'", 
                         "'coth'", "'ln'", "'log'", "'\\log'", null, null, 
                         "'+'", "'-'", null, "'='", "'<'", "'>'", "'\\le'", 
                         "'\\ge'", "','", null, null, null, null, null, 
                         "']'", null, null, null, null, null, null, null, 
                         null, null, "'1'" ];
	static symbolicNames = [ null, "L_BRACKET", "SEMICOLON", "L_BRACE", "R_BRACE", 
                          "L_PAREN", "R_PAREN", "VBAR", "UNDERSCORE", "PI", 
                          "CMD_INT", "CMD_MATHRM", "CMD_FRAC", "CMD_CDOT", 
                          "CMD_SQRT", "CMD_SIM", "CMD_APPROX", "BACK_SLASH", 
                          "CMD_SIN", "CMD_COS", "CMD_TAN", "CMD_COT", "CMD_SEC", 
                          "CMD_CSC", "CMD_ARCSIN", "CMD_ARCCOS", "CMD_ARCTAN", 
                          "CMD_SINH", "CMD_COSH", "CMD_TANH", "CMD_COTH", 
                          "CMD_LN", "CMD_LOG", "CMD_LOG_WITH_SLASH", "CMD_LEFT", 
                          "CMD_RIGHT", "ADD", "SUB", "CARET", "EQ", "LT", 
                          "GT", "LTE", "GTE", "COMMA", "NUMBER", "ID", "WS", 
                          "SLASH_SPACE", "ERROR_CHAR", "R_BRACKET", "U_CMD_FRAC", 
                          "U_CMD_CDOT", "U_CMD_SQRT", "U_CARET", "U_NAME", 
                          "U_L_PAREN", "U_R_PAREN", "U_L_BRACE", "U_R_BRACE", 
                          "U_ONE", "U_NUMBER", "U_CMD_LEFT", "U_CMD_RIGHT", 
                          "U_WS", "U_SLASH_SPACE", "U_ERROR_CHAR" ];
	static ruleNames = [ "L_BRACKET", "SEMICOLON", "L_BRACE", "R_BRACE", "L_PAREN", 
                      "R_PAREN", "VBAR", "UNDERSCORE", "PI", "CMD_INT", 
                      "CMD_MATHRM", "CMD_FRAC", "CMD_CDOT", "CMD_SQRT", 
                      "CMD_SIM", "CMD_APPROX", "BACK_SLASH", "CMD_SIN", 
                      "CMD_COS", "CMD_TAN", "CMD_COT", "CMD_SEC", "CMD_CSC", 
                      "CMD_ARCSIN", "CMD_ARCCOS", "CMD_ARCTAN", "CMD_SINH", 
                      "CMD_COSH", "CMD_TANH", "CMD_COTH", "CMD_LN", "CMD_LOG", 
                      "CMD_LOG_WITH_SLASH", "CMD_LEFT", "CMD_RIGHT", "ADD", 
                      "SUB", "CARET", "EQ", "LT", "GT", "LTE", "GTE", "COMMA", 
                      "NUMBER", "DIGIT", "IDENTIFIER", "EXP", "GREEK_CHAR", 
                      "ID", "WS", "SLASH_SPACE", "ERROR_CHAR", "R_BRACKET", 
                      "U_CMD_FRAC", "U_CMD_CDOT", "U_CMD_SQRT", "U_CARET", 
                      "U_NAME", "U_L_PAREN", "U_R_PAREN", "U_L_BRACE", "U_R_BRACE", 
                      "U_ONE", "U_NUMBER", "U_DIGIT", "U_CMD_LEFT", "U_CMD_RIGHT", 
                      "U_WS", "U_SLASH_SPACE", "U_ERROR_CHAR" ];

    constructor(input) {
        super(input)
        this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.PredictionContextCache());
    }

    get atn() {
        return atn;
    }
}

LatexLexer.EOF = antlr4.Token.EOF;
LatexLexer.L_BRACKET = 1;
LatexLexer.SEMICOLON = 2;
LatexLexer.L_BRACE = 3;
LatexLexer.R_BRACE = 4;
LatexLexer.L_PAREN = 5;
LatexLexer.R_PAREN = 6;
LatexLexer.VBAR = 7;
LatexLexer.UNDERSCORE = 8;
LatexLexer.PI = 9;
LatexLexer.CMD_INT = 10;
LatexLexer.CMD_MATHRM = 11;
LatexLexer.CMD_FRAC = 12;
LatexLexer.CMD_CDOT = 13;
LatexLexer.CMD_SQRT = 14;
LatexLexer.CMD_SIM = 15;
LatexLexer.CMD_APPROX = 16;
LatexLexer.BACK_SLASH = 17;
LatexLexer.CMD_SIN = 18;
LatexLexer.CMD_COS = 19;
LatexLexer.CMD_TAN = 20;
LatexLexer.CMD_COT = 21;
LatexLexer.CMD_SEC = 22;
LatexLexer.CMD_CSC = 23;
LatexLexer.CMD_ARCSIN = 24;
LatexLexer.CMD_ARCCOS = 25;
LatexLexer.CMD_ARCTAN = 26;
LatexLexer.CMD_SINH = 27;
LatexLexer.CMD_COSH = 28;
LatexLexer.CMD_TANH = 29;
LatexLexer.CMD_COTH = 30;
LatexLexer.CMD_LN = 31;
LatexLexer.CMD_LOG = 32;
LatexLexer.CMD_LOG_WITH_SLASH = 33;
LatexLexer.CMD_LEFT = 34;
LatexLexer.CMD_RIGHT = 35;
LatexLexer.ADD = 36;
LatexLexer.SUB = 37;
LatexLexer.CARET = 38;
LatexLexer.EQ = 39;
LatexLexer.LT = 40;
LatexLexer.GT = 41;
LatexLexer.LTE = 42;
LatexLexer.GTE = 43;
LatexLexer.COMMA = 44;
LatexLexer.NUMBER = 45;
LatexLexer.ID = 46;
LatexLexer.WS = 47;
LatexLexer.SLASH_SPACE = 48;
LatexLexer.ERROR_CHAR = 49;
LatexLexer.R_BRACKET = 50;
LatexLexer.U_CMD_FRAC = 51;
LatexLexer.U_CMD_CDOT = 52;
LatexLexer.U_CMD_SQRT = 53;
LatexLexer.U_CARET = 54;
LatexLexer.U_NAME = 55;
LatexLexer.U_L_PAREN = 56;
LatexLexer.U_R_PAREN = 57;
LatexLexer.U_L_BRACE = 58;
LatexLexer.U_R_BRACE = 59;
LatexLexer.U_ONE = 60;
LatexLexer.U_NUMBER = 61;
LatexLexer.U_CMD_LEFT = 62;
LatexLexer.U_CMD_RIGHT = 63;
LatexLexer.U_WS = 64;
LatexLexer.U_SLASH_SPACE = 65;
LatexLexer.U_ERROR_CHAR = 66;

LatexLexer.UNITS = 1;




